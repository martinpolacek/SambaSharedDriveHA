#!/usr/bin/with-contenv bashio

# Wait for external disk to be available
while [ ! -b "/dev/sda1" ]; do
    bashio::log.info "Waiting for /dev/sda1 to become available..."
    sleep 5
done

# Mount the external disk
bashio::log.info "Mounting /dev/sda1 to /mnt/external_disk..."
mkdir -p /mnt/external_disk

# Try different file systems
if mount -t auto /dev/sda1 /mnt/external_disk; then
    bashio::log.info "Successfully mounted /dev/sda1"
else
    bashio::log.error "Failed to mount /dev/sda1"
    exit 1
fi

# Get configuration options
WORKGROUP=$(bashio::config 'workgroup')
NETBIOSNAME=$(bashio::config 'netbiosname')
SHARE_NAME=$(bashio::config 'share_name')
GUEST_OK=$(bashio::config 'guest_ok')
READ_ONLY=$(bashio::config 'read_only')
VETO_FILES=$(bashio::config 'veto_files')

# Generate smb.conf
bashio::log.info "Generating Samba configuration..."
cat > /etc/samba/smb.conf << EOF
[global]
   workgroup = ${WORKGROUP}
   netbios name = ${NETBIOSNAME}
   server string = Home Assistant External USB Disk
   security = user
   map to guest = Bad User
   guest account = nobody
   log file = /var/log/samba/log.%m
   max log size = 1000
   logging = file
   panic action = /usr/share/samba/panic-action %d
   server role = standalone server
   obey pam restrictions = yes
   unix password sync = yes
   passwd program = /usr/bin/passwd %u
   passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
   pam password change = yes
   usershare allow guests = yes
   load printers = no
   printing = bsd
   printcap name = /dev/null
   disable spoolss = yes
   socket options = TCP_NODELAY IPTOS_LOWDELAY SO_RCVBUF=131072 SO_SNDBUF=131072
   server min protocol = SMB2
   client min protocol = SMB2
   wins support = yes

[${SHARE_NAME}]
   comment = External USB Disk
   path = /mnt/external_disk
   browseable = yes
   read only = $([ "${READ_ONLY}" = "true" ] && echo "yes" || echo "no")
   guest ok = $([ "${GUEST_OK}" = "true" ] && echo "yes" || echo "no")
   create mask = 0777
   directory mask = 0777
   force user = nobody
   force group = nogroup
   veto files = ${VETO_FILES}
   delete veto files = yes
EOF

bashio::log.info "Starting Samba daemon..."
exec smbd --foreground --no-process-group

